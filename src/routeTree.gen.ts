/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authAuthRouteRouteImport } from './routes/(auth)/auth/route'
import { Route as ApiTrpcSplatRouteImport } from './routes/api.trpc.$'
import { Route as authAuthSignUpRouteImport } from './routes/(auth)/auth/sign-up'
import { Route as authAuthSignInRouteImport } from './routes/(auth)/auth/sign-in'
import { Route as authApiAuthSplatRouteImport } from './routes/(auth)/api.auth.$'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthRouteRoute = authAuthRouteRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTrpcSplatRoute = ApiTrpcSplatRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthSignUpRoute = authAuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authAuthRouteRoute,
} as any)
const authAuthSignInRoute = authAuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authAuthRouteRoute,
} as any)
const authApiAuthSplatRoute = authApiAuthSplatRouteImport.update({
  id: '/(auth)/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/auth/sign-in': typeof authAuthSignInRoute
  '/auth/sign-up': typeof authAuthSignUpRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/api/auth/$': typeof authApiAuthSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof authAuthRouteRouteWithChildren
  '/auth/sign-in': typeof authAuthSignInRoute
  '/auth/sign-up': typeof authAuthSignUpRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/api/auth/$': typeof authApiAuthSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)/auth': typeof authAuthRouteRouteWithChildren
  '/(auth)/auth/sign-in': typeof authAuthSignInRoute
  '/(auth)/auth/sign-up': typeof authAuthSignUpRoute
  '/api/trpc/$': typeof ApiTrpcSplatRoute
  '/(auth)/api/auth/$': typeof authApiAuthSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/api/trpc/$'
    | '/api/auth/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/api/trpc/$'
    | '/api/auth/$'
  id:
    | '__root__'
    | '/'
    | '/(auth)/auth'
    | '/(auth)/auth/sign-in'
    | '/(auth)/auth/sign-up'
    | '/api/trpc/$'
    | '/(auth)/api/auth/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authAuthRouteRoute: typeof authAuthRouteRouteWithChildren
  ApiTrpcSplatRoute: typeof ApiTrpcSplatRoute
  authApiAuthSplatRoute: typeof authApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth/sign-up': {
      id: '/(auth)/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof authAuthSignUpRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
    '/(auth)/auth/sign-in': {
      id: '/(auth)/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof authAuthSignInRouteImport
      parentRoute: typeof authAuthRouteRoute
    }
    '/(auth)/api/auth/$': {
      id: '/(auth)/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof authApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface authAuthRouteRouteChildren {
  authAuthSignInRoute: typeof authAuthSignInRoute
  authAuthSignUpRoute: typeof authAuthSignUpRoute
}

const authAuthRouteRouteChildren: authAuthRouteRouteChildren = {
  authAuthSignInRoute: authAuthSignInRoute,
  authAuthSignUpRoute: authAuthSignUpRoute,
}

const authAuthRouteRouteWithChildren = authAuthRouteRoute._addFileChildren(
  authAuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authAuthRouteRoute: authAuthRouteRouteWithChildren,
  ApiTrpcSplatRoute: ApiTrpcSplatRoute,
  authApiAuthSplatRoute: authApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
